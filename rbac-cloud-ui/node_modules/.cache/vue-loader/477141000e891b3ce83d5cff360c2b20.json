{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\tools\\vue-filename-injector\\src\\lib\\injector.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\pages\\Login\\page.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\pages\\Login\\page.vue","mtime":1578716164475},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\tools\\vue-filename-injector\\src\\lib\\injector.js","mtime":1578716163426}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport dayjs from 'dayjs'\nimport { mapActions } from 'vuex'\nexport default {\n  data () {\n    return {\n      timeInterval: null,\n      time: dayjs().format('HH:mm:ss'),\n      // 快速选择用户\n      dialogVisible: false,\n      users: [\n        {\n          name: '管理员',\n          username: 'admin',\n          password: 'admin'\n        },\n        {\n          name: '编辑',\n          username: 'editor',\n          password: 'editor'\n        },\n        {\n          name: '用户1',\n          username: 'user1',\n          password: 'user1'\n        }\n      ],\n      // 表单\n      formLogin: {\n        username: 'admin',\n        password: 'admin',\n        code: 'v9am'\n      },\n      // 校验\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n        code: [\n          { required: true, message: '请输入验证码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  mounted () {\n    this.timeInterval = setInterval(() => {\n      this.refreshTime()\n    }, 1000)\n  },\n  beforeDestroy () {\n    clearInterval(this.timeInterval)\n  },\n  methods: {\n    ...mapActions('d2admin/account', [\n      'login'\n    ]),\n    refreshTime () {\n      this.time = dayjs().format('HH:mm:ss')\n    },\n    /**\n     * @description 接收选择一个用户快速登录的事件\n     * @param {Object} user 用户信息\n     */\n    handleUserBtnClick (user) {\n      this.formLogin.username = user.username\n      this.formLogin.password = user.password\n      this.submit()\n    },\n    /**\n     * @description 提交表单\n     */\n    // 提交登录信息\n    submit () {\n      this.$refs.loginForm.validate((valid) => {\n        if (valid) {\n          // 登录\n          // 注意 这里的演示没有传验证码\n          // 具体需要传递的数据请自行修改代码\n          this.login({\n            username: this.formLogin.username,\n            password: this.formLogin.password\n          })\n            .then(() => {\n              // 重定向对象不存在则返回顶层路径\n              this.$router.replace(this.$route.query.redirect || '/')\n            })\n        } else {\n          // 登录表单校验失败\n          this.$message.error('表单校验失败')\n        }\n      })\n    }\n  }\n}\n",null]}
{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\libs\\util.log.js","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\libs\\util.log.js","mtime":1578716163453},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\IDEA_WorkSpace\\\\mygit_project\\\\rbac\\\\rbac-cloud-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nvar log = {};\n/**\n * @description 返回这个样式的颜色值\n * @param {String} type 样式名称 [ primary | success | warning | danger | text ]\n */\n\nfunction typeColor() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n  var color = '';\n\n  switch (type) {\n    case 'default':\n      color = '#35495E';\n      break;\n\n    case 'primary':\n      color = '#3488ff';\n      break;\n\n    case 'success':\n      color = '#43B883';\n      break;\n\n    case 'warning':\n      color = '#e6a23c';\n      break;\n\n    case 'danger':\n      color = '#f56c6c';\n      break;\n\n    default:\n      ;\n      break;\n  }\n\n  return color;\n}\n/**\n * @description 打印一个 [ title | text ] 样式的信息\n * @param {String} title title text\n * @param {String} info info text\n * @param {String} type style\n */\n\n\nlog.capsule = function (title, info) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'primary';\n  console.log(\"%c \".concat(title, \" %c \").concat(info, \" %c\"), 'background:#35495E; padding: 1px; border-radius: 3px 0 0 3px; color: #fff;', \"background:\".concat(typeColor(type), \"; padding: 1px; border-radius: 0 3px 3px 0;  color: #fff;\"), 'background:transparent');\n};\n/**\n * @description 打印彩色文字\n */\n\n\nlog.colorful = function (textArr) {\n  var _console;\n\n  (_console = console).log.apply(_console, [\"%c\".concat(textArr.map(function (t) {\n    return t.text || '';\n  }).join('%c'))].concat(_toConsumableArray(textArr.map(function (t) {\n    return \"color: \".concat(typeColor(t.type), \";\");\n  }))));\n};\n/**\n * @description 打印 default 样式的文字\n */\n\n\nlog.default = function (text) {\n  log.colorful([{\n    text: text\n  }]);\n};\n/**\n * @description 打印 primary 样式的文字\n */\n\n\nlog.primary = function (text) {\n  log.colorful([{\n    text: text,\n    type: 'primary'\n  }]);\n};\n/**\n * @description 打印 success 样式的文字\n */\n\n\nlog.success = function (text) {\n  log.colorful([{\n    text: text,\n    type: 'success'\n  }]);\n};\n/**\n * @description 打印 warning 样式的文字\n */\n\n\nlog.warning = function (text) {\n  log.colorful([{\n    text: text,\n    type: 'warning'\n  }]);\n};\n/**\n * @description 打印 danger 样式的文字\n */\n\n\nlog.danger = function (text) {\n  log.colorful([{\n    text: text,\n    type: 'danger'\n  }]);\n};\n\nexport default log;",null]}
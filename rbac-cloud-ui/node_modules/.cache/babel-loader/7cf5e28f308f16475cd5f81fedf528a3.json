{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\components\\d2-container\\components\\mixins\\bs.js","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\components\\d2-container\\components\\mixins\\bs.js","mtime":1578716163350},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import BScroll from 'better-scroll';\nexport default {\n  props: {\n    // 滚动优化的选项\n    betterScrollOptions: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      BS: null\n    };\n  },\n  mounted: function mounted() {\n    this.scrollInit();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.scrollDestroy();\n  },\n  methods: {\n    scrollInit: function scrollInit() {\n      var _this = this;\n\n      // 初始化 bs\n      this.BS = new BScroll(this.$refs.wrapper, Object.assign({\n        mouseWheel: true,\n        click: true,\n        scrollbar: {\n          fade: true,\n          interactive: false\n        }\n      }, this.betterScrollOptions)); // 滚动时发出事件 并且统一返回的数据格式\n\n      this.BS.on('scroll', function (_ref) {\n        var x = _ref.x,\n            y = _ref.y;\n        return _this.$emit('scroll', {\n          x: -x,\n          y: -y\n        });\n      });\n    },\n    scrollDestroy: function scrollDestroy() {\n      // https://github.com/d2-projects/d2-admin/issues/75\n      try {\n        this.BS.destroy();\n      } catch (e) {\n        delete this.BS;\n        this.BS = null;\n      }\n    },\n    // 外部调用的方法 返回顶部\n    scrollToTop: function scrollToTop() {\n      if (this.BS) this.BS.scrollTo(0, 0, 300);\n    },\n    // 手动发出滚动事件\n    scroll: function scroll() {\n      if (this.BS) {\n        this.$emit('scroll', {\n          x: -this.BS.x,\n          y: -this.BS.y\n        });\n      }\n    }\n  }\n};",null]}
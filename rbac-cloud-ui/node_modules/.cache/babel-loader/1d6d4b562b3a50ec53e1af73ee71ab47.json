{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\store\\modules\\d2admin\\modules\\theme.js","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\store\\modules\\d2admin\\modules\\theme.js","mtime":1578716163444},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\IDEA_WorkSpace\\\\mygit_project\\\\rbac\\\\rbac-cloud-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\n// 设置文件\nimport setting from '@/setting.js';\nexport default {\n  namespaced: true,\n  state: {\n    // 主题\n    list: setting.theme.list,\n    // 现在激活的主题 这应该是一个名字 不是对象\n    activeName: setting.theme.list[0].name\n  },\n  getters: {\n    /**\n     * @description 返回当前的主题信息 不是一个名字 而是当前激活主题的所有数据\n     * @param {Object} state vuex state\n     */\n    activeSetting: function activeSetting(state) {\n      return state.list.find(function (theme) {\n        return theme.name === state.activeName;\n      });\n    }\n  },\n  actions: {\n    /**\n     * @description 激活一个主题\n     * @param {Object} state vuex state\n     * @param {String} themeValue 需要激活的主题名称\n     */\n    set: function set(_ref, themeName) {\n      var state = _ref.state,\n          commit = _ref.commit,\n          dispatch = _ref.dispatch;\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // 检查这个主题在主题列表里是否存在\n                  state.activeName = state.list.find(function (e) {\n                    return e.name === themeName;\n                  }) ? themeName : state.list[0].name; // 将 vuex 中的主题应用到 dom\n\n                  commit('dom'); // 持久化\n\n                  _context.next = 4;\n                  return dispatch('d2admin/db/set', {\n                    dbName: 'sys',\n                    path: 'theme.activeName',\n                    value: state.activeName,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 4:\n                  // end\n                  resolve();\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n\n    /**\n     * @description 从持久化数据加载主题设置\n     * @param {Object} state vuex state\n     */\n    load: function load(_ref3) {\n      var state = _ref3.state,\n          commit = _ref3.commit,\n          dispatch = _ref3.dispatch;\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(resolve) {\n          var activeName;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return dispatch('d2admin/db/get', {\n                    dbName: 'sys',\n                    path: 'theme.activeName',\n                    defaultValue: state.list[0].name,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 2:\n                  activeName = _context2.sent;\n\n                  if (!state.list.find(function (e) {\n                    return e.name === activeName;\n                  })) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  state.activeName = activeName;\n                  _context2.next = 10;\n                  break;\n\n                case 7:\n                  state.activeName = state.list[0].name; // 持久化\n\n                  _context2.next = 10;\n                  return dispatch('d2admin/db/set', {\n                    dbName: 'sys',\n                    path: 'theme.activeName',\n                    value: state.activeName,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 10:\n                  // 将 vuex 中的主题应用到 dom\n                  commit('dom'); // end\n\n                  resolve();\n\n                case 12:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  mutations: {\n    /**\n     * @description 将 vuex 中的主题应用到 dom\n     * @param {Object} state vuex state\n     */\n    dom: function dom(state) {\n      document.body.className = \"theme-\".concat(state.activeName);\n    }\n  }\n};",null]}
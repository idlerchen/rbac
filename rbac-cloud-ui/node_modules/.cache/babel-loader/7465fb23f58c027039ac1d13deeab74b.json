{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\tools\\vue-filename-injector\\src\\lib\\injector.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\layouts\\HeaderAside\\components\\tabs\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\layouts\\HeaderAside\\components\\tabs\\index.vue","mtime":1578716164476},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\tools\\vue-filename-injector\\src\\lib\\injector.js","mtime":1578716163426}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"D:\\\\IDEA_WorkSpace\\\\mygit_project\\\\rbac\\\\rbac-cloud-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  components: {\n    D2Contextmenu: function D2Contextmenu() {\n      return import(\"../contextmenu\");\n    },\n    D2ContextmenuList: function D2ContextmenuList() {\n      return import(\"../contextmenu/components/contentmenuList\");\n    }\n  },\n  data: function data() {\n    return {\n      contextmenuFlag: false,\n      contentmenuX: 0,\n      contentmenuY: 0,\n      contextmenuListIndex: [{\n        icon: 'times-circle',\n        title: '关闭全部',\n        value: 'all'\n      }],\n      contextmenuList: [{\n        icon: 'arrow-left',\n        title: '关闭左侧',\n        value: 'left'\n      }, {\n        icon: 'arrow-right',\n        title: '关闭右侧',\n        value: 'right'\n      }, {\n        icon: 'times',\n        title: '关闭其它',\n        value: 'other'\n      }, {\n        icon: 'times-circle',\n        title: '关闭全部',\n        value: 'all'\n      }],\n      tagName: '/'\n    };\n  },\n  computed: _objectSpread({}, mapState('d2admin/page', ['opened', 'current'])),\n  methods: _objectSpread({}, mapActions('d2admin/page', ['close', 'closeLeft', 'closeRight', 'closeOther', 'closeAll']), {\n    /**\n     * @description 右键菜单功能点击\n     */\n    handleContextmenu: function handleContextmenu(event) {\n      var target = event.target; // 解决 https://github.com/d2-projects/d2-admin/issues/54\n\n      var flag = false;\n      if (target.className.indexOf('el-tabs__item') > -1) flag = true;else if (target.parentNode.className.indexOf('el-tabs__item') > -1) {\n        target = target.parentNode;\n        flag = true;\n      }\n\n      if (flag) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contentmenuX = event.clientX;\n        this.contentmenuY = event.clientY;\n        this.tagName = target.getAttribute('aria-controls').slice(5);\n        this.contextmenuFlag = true;\n      }\n    },\n\n    /**\n     * @description 右键菜单的row-click事件\n     */\n    contextmenuClick: function contextmenuClick(command) {\n      this.handleControlItemClick(command, this.tagName);\n    },\n\n    /**\n     * @description 接收点击关闭控制上选项的事件\n     */\n    handleControlItemClick: function handleControlItemClick(command) {\n      var tagName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (tagName) {\n        this.contextmenuFlag = false;\n      }\n\n      var params = {\n        pageSelect: tagName\n      };\n\n      switch (command) {\n        case 'left':\n          this.closeLeft(params);\n          break;\n\n        case 'right':\n          this.closeRight(params);\n          break;\n\n        case 'other':\n          this.closeOther(params);\n          break;\n\n        case 'all':\n          this.closeAll();\n          break;\n\n        default:\n          this.$message.error('无效的操作');\n          break;\n      }\n    },\n\n    /**\n     * @description 接收点击 tab 标签的事件\n     */\n    handleClick: function handleClick(tab, event) {\n      // 找到点击的页面在 tag 列表里是哪个\n      var page = this.opened.find(function (page) {\n        return page.fullPath === tab.name;\n      });\n      var name = page.name,\n          params = page.params,\n          query = page.query;\n\n      if (page) {\n        this.$router.push({\n          name: name,\n          params: params,\n          query: query\n        });\n      }\n    },\n\n    /**\n     * @description 点击 tab 上的删除按钮触发这里 首页的删除按钮已经隐藏 因此这里不用判断是 index\n     */\n    handleTabsEdit: function handleTabsEdit(tagName, action) {\n      if (action === 'remove') {\n        this.close({\n          tagName: tagName\n        });\n      }\n    }\n  })\n};",null]}
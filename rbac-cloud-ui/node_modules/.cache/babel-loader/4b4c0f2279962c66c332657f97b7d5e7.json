{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\components\\d2-container\\index.js","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\components\\d2-container\\index.js","mtime":1578716163378},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// 组件\nimport d2ContainerFull from \"./components/d2-container-full.vue\";\nimport d2ContainerFullBs from \"./components/d2-container-full-bs.vue\";\nimport d2ContainerGhost from \"./components/d2-container-ghost.vue\";\nimport d2ContainerGhostBs from \"./components/d2-container-ghost-bs.vue\";\nimport d2ContainerCard from \"./components/d2-container-card.vue\";\nimport d2ContainerCardBs from \"./components/d2-container-card-bs.vue\";\nimport d2Source from \"./components/d2-source.vue\";\nexport default {\n  name: 'd2-container',\n  props: {\n    // 容器样式\n    type: {\n      type: String,\n      required: false,\n      default: 'full'\n    },\n    // 滚动优化\n    betterScroll: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  computed: {\n    // 始终返回渲染组件\n    component: function component() {\n      if (this.type === 'card' && !this.betterScroll) return d2ContainerCard;\n      if (this.type === 'card' && this.betterScroll) return d2ContainerCardBs;\n      if (this.type === 'ghost' && !this.betterScroll) return d2ContainerGhost;\n      if (this.type === 'ghost' && this.betterScroll) return d2ContainerGhostBs;\n      if (this.type === 'full' && !this.betterScroll) return d2ContainerFull;\n      if (this.type === 'full' && this.betterScroll) return d2ContainerFullBs;else {\n        return 'div';\n      }\n    }\n  },\n  render: function render(h) {\n    var _this = this;\n\n    var slots = [this.$slots.default];\n    if (this.$slots.header) slots.push(h('template', {\n      slot: 'header'\n    }, [this.$slots.header]));\n    if (this.$slots.footer) slots.push(h('template', {\n      slot: 'footer'\n    }, [this.$slots.footer]));\n    return h('div', {\n      ref: 'container',\n      class: 'container-component'\n    }, [h(this.component, {\n      ref: 'component',\n      props: this.$attrs,\n      on: {\n        scroll: function scroll(e) {\n          return _this.$emit('scroll', e);\n        }\n      }\n    }, slots), h(d2Source)]);\n  },\n  methods: {\n    // 返回顶部\n    scrollToTop: function scrollToTop() {\n      this.$refs.component.scrollToTop(); // 如果开启了 better scroll 还需要手动触发一遍 scroll 事件\n\n      var bs = this.$refs.component.BS;\n      if (bs) this.$refs.component.scroll();\n    },\n    // 用法同原生方法 scrollBy\n    scrollBy: function scrollBy() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n\n      if (this.betterScroll) {\n        var bs = this.$refs.component.BS;\n\n        if (bs) {\n          bs.scrollBy(-x, -y, time); // 手动触发一遍 scroll 事件\n\n          this.$refs.component.scroll();\n        }\n      } else {\n        this.$refs.component.$refs.body.scrollBy(x, y);\n      }\n    },\n    // 用法同原生方法 scrollTo\n    scrollTo: function scrollTo() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n\n      if (this.betterScroll) {\n        var bs = this.$refs.component.BS;\n\n        if (bs) {\n          bs.scrollTo(-x, -y, time); // 手动触发一遍 scroll 事件\n\n          this.$refs.component.scroll();\n        }\n      } else {\n        this.$refs.component.$refs.body.scrollTo(x, y);\n      }\n    },\n    // 用法同原生方法 scrollTop\n    scrollTop: function scrollTop() {\n      var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n\n      if (this.betterScroll) {\n        var bs = this.$refs.component.BS;\n\n        if (bs) {\n          bs.scrollTo(bs.x, -top, time); // 手动触发一遍 scroll 事件\n\n          this.$refs.component.scroll();\n        }\n      } else {\n        this.$refs.component.$refs.body.scrollTop = top;\n      }\n    }\n  }\n};",null]}
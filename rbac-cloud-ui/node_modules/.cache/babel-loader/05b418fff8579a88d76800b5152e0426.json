{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\config\\routes.js","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\config\\routes.js","mtime":1578716163443},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n\n/* eslint-disable */\n// 工具\nimport util from '@/libs/util.ice'; // 页面和布局\n\nimport Index from '@/pages/Index';\nimport Login from '@/pages/Login';\nimport Error404 from '@/pages/Error404';\nimport Demo1 from '@/pages/Demo1';\nimport Demo2 from '@/pages/Demo2';\nimport HeaderAside from '@/layouts/HeaderAside'; // 如果不指定 name 字段，会根据 path 生成 name = page-demo1\n// 转换规则见 util.recursiveRouterConfig 中 path2name 方法\n// meta 字段会和默认值使用 Object.assign 合并\n// 如果不指定 meta.name 的话，name 字段会使用和上面路由 name 一样的取值逻辑\n// 下面两个页面就是对比 你可以分别观察两个页面上显示的路由数据差异\n// 变量名 routerConfig 为 iceworks 检测关键字\n// ice 会自动在这个变量下添加路由数据\n// 请不要修改名称\n\nvar routerConfig = [{\n  path: '/',\n  component: HeaderAside,\n  children: [{\n    path: 'demo1',\n    component: Demo1\n  }, {\n    path: 'demo2',\n    component: Demo2\n  }, // keep the name param\n  {\n    path: '',\n    component: Index,\n    name: 'index'\n  }]\n}, {\n  path: '*',\n  component: Error404\n}]; // 不参与菜单显示的\n// ice 不会处理这部分\n// 但是这部分路由也会被注册\n// 处理规则同 routerConfig\n\nvar routerConfigMenuLogin = [// 登录\n{\n  path: '/login',\n  name: 'login',\n  component: Login,\n  meta: {\n    auth: false\n  }\n}, // 404\n{\n  path: '*',\n  component: Error404\n}]; // 导出全部路由设置\n\nexport default util.recursiveRouterConfig([].concat(routerConfig, routerConfigMenuLogin));\n\nfunction getFrameInRoutes() {\n  var frameInRoutes = [];\n  util.recursiveRouterConfig(routerConfig).forEach(function (e) {\n    var path = e.path,\n        name = e.name,\n        hidden = e.hidden,\n        meta = e.meta,\n        children = e.children;\n\n    if (children) {\n      children.forEach(function (child) {\n        var path = child.path,\n            name = child.name,\n            hidden = child.hidden,\n            meta = child.meta;\n        frameInRoutes.push({\n          path: path,\n          name: name,\n          hidden: hidden,\n          meta: meta\n        });\n      });\n    } else {\n      frameInRoutes.push({\n        path: path,\n        name: name,\n        hidden: hidden,\n        meta: meta\n      });\n    }\n  });\n  return frameInRoutes;\n} // 导出参与多标签页处理的路由设置\n// 这个数据会在 main.js 中使用\n\n\nexport var frameInRoutes = getFrameInRoutes();",null]}
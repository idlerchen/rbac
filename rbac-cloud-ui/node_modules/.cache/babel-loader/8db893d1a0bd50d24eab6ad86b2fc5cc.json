{"remainingRequest":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\tools\\vue-filename-injector\\src\\lib\\injector.js!D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\layouts\\HeaderAside\\components\\panel-search\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\src\\layouts\\HeaderAside\\components\\panel-search\\index.vue","mtime":1578716164472},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IDEA_WorkSpace\\mygit_project\\rbac\\rbac-cloud-ui\\tools\\vue-filename-injector\\src\\lib\\injector.js","mtime":1578716163426}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"D:\\\\IDEA_WorkSpace\\\\mygit_project\\\\rbac\\\\rbac-cloud-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Fuse from 'fuse.js';\nimport { mapState } from 'vuex';\nimport mixin from \"../mixin/menu\";\nexport default {\n  mixins: [mixin],\n  components: {\n    'd2-panel-search-item': function d2PanelSearchItem() {\n      return import(\"./components/panel-search-item/index.vue\");\n    }\n  },\n  data: function data() {\n    return {\n      searchText: '',\n      results: []\n    };\n  },\n  computed: _objectSpread({}, mapState('d2admin/search', ['hotkey', 'pool']), {\n    // 这份数据是展示在搜索面板下面的\n    resultsList: function resultsList() {\n      return this.results.length === 0 && this.searchText === '' ? this.pool.map(function (e) {\n        return _objectSpread({\n          value: e.fullTitle\n        }, e);\n      }) : this.results;\n    }\n  }),\n  methods: {\n    /**\n     * @description 过滤选项 这个方法在每次输入框的值发生变化时会触发\n     */\n    querySearch: function querySearch(queryString, callback) {\n      var pool = this.pool;\n      var results = this.query(queryString ? pool : [], queryString);\n      this.results = results;\n      callback(results);\n    },\n\n    /**\n     * @description 指定的数据源中根据指定的查询字符串过滤数据\n     * @param {Object} pool 需要过滤的数据\n     * @param {String} queryString 查询字符串\n     */\n    query: function query(pool, queryString) {\n      return new Fuse(pool, {\n        shouldSort: true,\n        tokenize: true,\n        threshold: 0.6,\n        location: 0,\n        distance: 100,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: ['fullTitle', 'path']\n      }).search(queryString).map(function (e) {\n        return _objectSpread({\n          value: e.fullTitle\n        }, e);\n      });\n    },\n\n    /**\n     * @description 聚焦输入框\n     */\n    focus: function focus() {\n      var _this = this;\n\n      this.input = '';\n      setTimeout(function () {\n        if (_this.$refs.input) {\n          _this.$refs.input.focus();\n        } // 还原\n\n\n        _this.searchText = '';\n        _this.results = [];\n      }, 500);\n    },\n\n    /**\n     * @description 接收用户在列表中选择项目的事件\n     */\n    handleResultsGroupItemClick: function handleResultsGroupItemClick(path) {\n      // 如果用户选择的就是当前页面 就直接关闭搜索面板\n      if (path === this.$route.path) {\n        this.handleEsc();\n        return;\n      } // 用户选择的是其它页面\n\n\n      this.handleMenuSelect(path);\n    },\n\n    /**\n     * @description 接收用户在下拉菜单中选中事件\n     */\n    handleSelect: function handleSelect(_ref) {\n      var _this2 = this;\n\n      var path = _ref.path;\n\n      // 如果用户选择的就是当前页面 就直接关闭搜索面板\n      if (path === this.$route.path) {\n        this.handleEsc();\n        return;\n      } // 用户选择的是其它页面\n\n\n      this.$nextTick(function () {\n        _this2.handleMenuSelect(path);\n      });\n    },\n\n    /**\n     * @augments 关闭输入框的下拉菜单\n     */\n    closeSuggestion: function closeSuggestion() {\n      if (this.$refs.input.activated) {\n        this.$refs.input.suggestions = [];\n        this.$refs.input.activated = false;\n      }\n    },\n\n    /**\n     * @augments 接收用户点击空白区域的关闭\n     */\n    handlePanelClick: function handlePanelClick() {\n      this.handleEsc();\n    },\n\n    /**\n     * @augments 接收用户触发的关闭\n     */\n    handleEsc: function handleEsc() {\n      var _this3 = this;\n\n      this.closeSuggestion();\n      this.$nextTick(function () {\n        _this3.$emit('close');\n      });\n    }\n  }\n};",null]}